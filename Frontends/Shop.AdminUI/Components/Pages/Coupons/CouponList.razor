@page "/CouponList"
@inject ICouponService couponService
@rendermode InteractiveServer
@attribute [Authorize]
<div class="col-md-12">
    <div class="chart-box">
        <h4>Kupon İşlemleri</h4>
        <a class="btn btn-primary" href="AddCoupon">Yeni Oluştur</a>
        <div class="bs-example" data-example-id="hoverable-table">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Kupon Kodu</th>
                        <th>İndirim Miktarı</th>
                        <th>Geçerlilik Tarihi</th>
                        <th>Düzenle</th>
                        <th>Sil</th>
                    </tr>
                </thead>
                <tbody>
                    @if (resultCouponDto is not null)
                    {
                        @foreach (var item in resultCouponDto)
                        {
                            <tr>
                                <th scope="row">@item.CouponID</th>
                                <td>@item.CouponCode</td>
                                <td>@item.CouponRate</td>
                                <td>@item.CouponValidDate</td>
                                <td>
                                    <button class="btn btn-warning" @onclick="() => ToggleUpdateState(item.CouponID)">
                                        <i class="fa fa-pencil" aria-hidden="true"></i>
                                    </button>
                                </td>
                                <td>
                                    <button class="btn btn-danger" @onclick="async () => { await DeleteCoupon(item.CouponID); }">
                                        <i class="fa fa-trash" aria-hidden="true"></i>
                                    </button>
                                </td>
                            </tr>
                            @if (item.IsActive)
                            {
                                <tr>
                                    <td colspan="2">
                                        <EditForm Model="updateCouponDto" OnValidSubmit="UpdateCoupon">
                                            <InputNumber @bind-Value="updateCouponDto.CouponID" hidden></InputNumber>
                                            <div class="form-group">
                                                <label for="CouponCode">Kupon Kodu</label>
                                                <InputText id="CouponCode"
                                                           @bind-Value="updateCouponDto.CouponCode"
                                                           class="form-control" />

                                                <label for="CouponRate">İndirim Miktarı</label>
                                                <InputNumber id="CouponRate"
                                                           @bind-Value="updateCouponDto.CouponRate"
                                                           class="form-control" />
                                                <label for="CouponValidDate">İndirim Miktarı</label>
                                                <InputDate id="CouponRate"
                                                             @bind-Value="updateCouponDto.CouponValidDate"
                                                             class="form-control" />
                                            </div>
                                            <button class="btn btn-success" type="submit">Kaydet</button>
                                        </EditForm>
                                    </td>

                                </tr>
                            }
                        }
                    }
                    else
                    {
                        <p>Veriler Yükleniyor....</p>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {

    private List<ResultCouponDto>? resultCouponDto { get; set; }
    private UpdateCouponDto? updateCouponDto { get; set; } = new UpdateCouponDto();


    public async Task ToggleUpdateState(int couponId)
    {
        foreach (var coupon in resultCouponDto)
        {
            coupon.IsActive = coupon.CouponID == couponId ? !coupon.IsActive : false;
        }

        updateCouponDto = await couponService.GetByIdCouponForUpdateAsync(couponId);
    }

    protected override async Task OnInitializedAsync()
    {
        await GetCouponList();
    }

    public async Task GetCouponList()
    {
        resultCouponDto = await couponService.GetAllCouponAsync();

    }

    public async Task DeleteCoupon(int id)
    {
        await couponService.DeleteCouponAsync(id);

        await GetCouponList();

    }

    public async Task UpdateCoupon()
    {
        await couponService.UpdateCouponAsync(updateCouponDto);
        await GetCouponList();

    }


}
