@page "/Statistics"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

<section class="content container-fluid">
    <div class="row">
        <div class="col-lg-3 col-xs-6">
            <div class="media-box">
                <div class="media-icon pull-left"><i class="icon-layers"></i> </div>
                <div class="media-info">
                    <h5>Toplam Kategori</h5>
                    <h3>@(totalCategoryCount == 0 ? "..." : totalCategoryCount.ToString())</h3>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-xs-6">
            <div class="media-box bg-sea">
                <div class="media-icon pull-left"><i class="icon-bargraph"></i> </div>
                <div class="media-info">
                    <h5>Toplam Ürün</h5>
                    <h3>@(totalProductCount == 0 ? "..." : totalProductCount.ToString())</h3>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-xs-6">
            <div class="media-box bg-blue">
                <div class="media-icon pull-left"><i class="icon-basket"></i> </div>
                <div class="media-info">
                    <h5>Total Sales</h5>
                    <h3>935</h3>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-xs-6">
            <div class="media-box bg-green">
                <div class="media-icon pull-left"><i class="icon-wallet"></i> </div>
                <div class="media-info">
                    <h5>New Orders</h5>
                    <h3>5324</h3>
                </div>
            </div>
        </div>
    </div>
</section>
@code {
    private HubConnection? hubConnection;
    private long totalProductCount;
    private long totalCategoryCount;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
             .WithUrl(NavigationManager.ToAbsoluteUri("http://localhost:5013/SignalRHub"))
             .Build();

        await hubConnection.StartAsync();
        Console.WriteLine(hubConnection.State);

        hubConnection.On<long>("ReceiveTotalProductCount", async (totalProductCount) =>
        {
          
            await InvokeAsync(() =>
            {
              
                this.totalProductCount = totalProductCount;
                StateHasChanged();
            });
        });    
        await hubConnection.SendAsync("SendTotalProductCount");

        hubConnection.On<long>("ReceiveTotalCategoryCount", async (totalCategoryCount) =>
      {

      await InvokeAsync(() =>
      {

          this.totalCategoryCount = totalCategoryCount;
          StateHasChanged();
      });
      });
        await hubConnection.SendAsync("SendTotalCategoryCount");
    }

 

}
